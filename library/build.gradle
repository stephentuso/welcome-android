plugins {
    alias(libs.plugins.agp.lib)
    id 'maven-publish'
}

def versionProps = rootProject.file('version.properties').withInputStream { stream ->
    new Properties().tap { load(stream) }
}

android {
    namespace = "com.stephentuso.welcome"
    compileSdk = versionProps['targetSdk'].toInteger()

    defaultConfig {
        minSdk = versionProps['minSdk'].toInteger()
        targetSdk = compileSdk
        versionCode = versionProps['versionCode'].toInteger()
        versionName = versionProps['versionName']
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled = false
        }
    }

    sourceSets {
        main.res.srcDirs += 'src/main/res-public'
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
}

dependencies {
    implementation(libs.androidx.preference)

    testImplementation(libs.junit)
    testImplementation(libs.mockito.core)
    testImplementation(libs.mockito.junit.jupiter)
}

configurations.implementation {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
}

publishing {
    publications {
        release(MavenPublication) {
            group = GROUP
            artifactId = LIBRARY_ARTIFACT_ID
            version = versionProps['versionName']
            pom {
                packaging = 'aar'
                name = LIBRARY_NAME
                description = LIBRARY_DESCRIPTION
                url = LIBRARY_URL
                scm {
                    connection = LIBRARY_VCS_CONNECTION
                    url = LIBRARY_VCS_URL
                }
                licenses {
                    license {
                        name = LIBRARY_LICENSE
                        url = LIBRARY_LICENSE_URL
                    }
                }
                developers {
                    developer {
                        id = DEVELOPER_ID
                        name = DEVELOPER_NAME
                        email = DEVELOPER_EMAIL
                    }
                }
            }
            afterEvaluate {
                from components.release
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}
